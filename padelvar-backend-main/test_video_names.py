#!/usr/bin/env python3
"""Test pour v√©rifier que les noms de joueurs s'affichent dans les vid√©os"""

import requests
import json
from datetime import datetime
from src.main import app
from src.models.database import db, Video, User, Club, Court
from src.config import Config

# Configuration de test
app.config.from_object(Config)

with app.app_context():
    print("=== TEST NOMS DE JOUEURS DANS LES VID√âOS ===")
    
    # Trouver un club avec des vid√©os
    club = Club.query.first()
    if not club:
        print("‚ùå Aucun club trouv√©")
        exit(1)
    
    print(f"‚úÖ Club trouv√©: {club.name} (ID: {club.id})")
    
    # V√©rifier les vid√©os directement en base
    videos = Video.query.filter(Video.club_id == club.id).all()
    print(f"‚úÖ Vid√©os trouv√©es en base: {len(videos)}")
    
    for video in videos[:3]:
        user = video.user
        user_name = user.name if user else "Utilisateur inconnu"
        print(f"  üìπ Vid√©o: {video.title}")
        print(f"     üë§ Joueur: {user_name} (user_id: {video.user_id})")
        print(f"     üèüÔ∏è Court: {video.court_id}")
        print()
    
    # Test de l'API GET /clubs/videos
    print("=== TEST API GET /clubs/videos ===")
    
    try:
        with app.test_client() as client:
            # Login d'abord
            login_data = {'email': 'admin@padelvar.com', 'password': 'admin123'}
            login_response = client.post('/api/login', json=login_data)
            
            if login_response.status_code != 200:
                print(f"‚ùå √âchec du login: {login_response.status_code}")
                print(login_response.get_json())
                exit(1)
            
            print("‚úÖ Login r√©ussi")
            
            # Maintenant tester l'API videos
            response = client.get(f'/api/clubs/{club.id}/videos')
            
            if response.status_code == 200:
                data = response.get_json()
                videos_api = data.get('videos', [])
                
                print(f"‚úÖ API r√©pondu avec {len(videos_api)} vid√©os")
                
                for video in videos_api[:3]:
                    player_name = video.get('player_name', 'CHAMP MANQUANT')
                    print(f"  üìπ Vid√©o API: {video.get('title', 'Sans titre')}")
                    print(f"     üë§ Nom joueur: {player_name}")
                    print(f"     üèüÔ∏è Court ID: {video.get('court_id', 'N/A')}")
                    print()
                
                # V√©rifier si tous ont des noms
                missing_names = [v for v in videos_api if v.get('player_name') in [None, 'N/A', '']]
                if missing_names:
                    print(f"‚ö†Ô∏è {len(missing_names)} vid√©os ont des noms manquants")
                else:
                    print("‚úÖ Toutes les vid√©os ont des noms de joueurs!")
                    
            else:
                print(f"‚ùå Erreur API: {response.status_code}")
                print(response.get_json())
                
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {str(e)}")
        import traceback
        traceback.print_exc()
